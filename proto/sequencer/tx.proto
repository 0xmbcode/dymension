syntax = "proto3";
package dymensionxyz.dymension.sequencer;

// this line is used by starport scaffolding # proto/tx/import
import "sequencer/description.proto";

import "tendermint/crypto/keys.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/dymensionxyz/dymension/x/sequencer/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateSequencer(MsgCreateSequencer) returns (MsgCreateSequencerResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

// MsgCreateSequencer defines a SDK message for creating a new sequencer.
message MsgCreateSequencer {
  // creator is the bech32-encoded address of the account sent the transaction (sequencer creator)
  string creator = 1;
  // sequencerAddress is the bech32-encoded address of the sequencer account.
  string sequencerAddress = 2;
  // dymintPubKey is the public key of the sequencer dymint client.
  tendermint.crypto.PublicKey dymintPubKey = 3 [(gogoproto.nullable) = false];
  // rollappId defines the rollapp to which the sequencer belongs.
  string rollappId = 4;
  // description defines the descriptive terms for the sequencer.
  Description description = 5 [(gogoproto.nullable) = false];
}

message MsgCreateSequencerResponse {
}

// this line is used by starport scaffolding # proto/tx/message
